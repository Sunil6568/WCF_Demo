//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC5Demo.TaskServiceClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/TaskList_Service.Model")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfessionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fullname {
            get {
                return this.FullnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullnameField, value) != true)) {
                    this.FullnameField = value;
                    this.RaisePropertyChanged("Fullname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Profession {
            get {
                return this.ProfessionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionField, value) != true)) {
                    this.ProfessionField = value;
                    this.RaisePropertyChanged("Profession");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TaskServiceClient.ITaskService")]
    public interface ITaskService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/GetAllTask", ReplyAction="http://tempuri.org/ITaskService/GetAllTaskResponse")]
        MVC5Demo.TaskServiceClient.Person[] GetAllTask();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/GetAllTask", ReplyAction="http://tempuri.org/ITaskService/GetAllTaskResponse")]
        System.Threading.Tasks.Task<MVC5Demo.TaskServiceClient.Person[]> GetAllTaskAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/GetTaskById", ReplyAction="http://tempuri.org/ITaskService/GetTaskByIdResponse")]
        MVC5Demo.TaskServiceClient.Person GetTaskById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/GetTaskById", ReplyAction="http://tempuri.org/ITaskService/GetTaskByIdResponse")]
        System.Threading.Tasks.Task<MVC5Demo.TaskServiceClient.Person> GetTaskByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/AddNew", ReplyAction="http://tempuri.org/ITaskService/AddNewResponse")]
        bool AddNew(MVC5Demo.TaskServiceClient.Person task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/AddNew", ReplyAction="http://tempuri.org/ITaskService/AddNewResponse")]
        System.Threading.Tasks.Task<bool> AddNewAsync(MVC5Demo.TaskServiceClient.Person task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/UpdateTask", ReplyAction="http://tempuri.org/ITaskService/UpdateTaskResponse")]
        void UpdateTask(MVC5Demo.TaskServiceClient.Person contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/UpdateTask", ReplyAction="http://tempuri.org/ITaskService/UpdateTaskResponse")]
        System.Threading.Tasks.Task UpdateTaskAsync(MVC5Demo.TaskServiceClient.Person contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/DeleteTask", ReplyAction="http://tempuri.org/ITaskService/DeleteTaskResponse")]
        void DeleteTask(MVC5Demo.TaskServiceClient.Person task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/DeleteTask", ReplyAction="http://tempuri.org/ITaskService/DeleteTaskResponse")]
        System.Threading.Tasks.Task DeleteTaskAsync(MVC5Demo.TaskServiceClient.Person task);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITaskServiceChannel : MVC5Demo.TaskServiceClient.ITaskService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TaskServiceClient : System.ServiceModel.ClientBase<MVC5Demo.TaskServiceClient.ITaskService>, MVC5Demo.TaskServiceClient.ITaskService {
        
        public TaskServiceClient() {
        }
        
        public TaskServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TaskServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MVC5Demo.TaskServiceClient.Person[] GetAllTask() {
            return base.Channel.GetAllTask();
        }
        
        public System.Threading.Tasks.Task<MVC5Demo.TaskServiceClient.Person[]> GetAllTaskAsync() {
            return base.Channel.GetAllTaskAsync();
        }
        
        public MVC5Demo.TaskServiceClient.Person GetTaskById(int id) {
            return base.Channel.GetTaskById(id);
        }
        
        public System.Threading.Tasks.Task<MVC5Demo.TaskServiceClient.Person> GetTaskByIdAsync(int id) {
            return base.Channel.GetTaskByIdAsync(id);
        }
        
        public bool AddNew(MVC5Demo.TaskServiceClient.Person task) {
            return base.Channel.AddNew(task);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewAsync(MVC5Demo.TaskServiceClient.Person task) {
            return base.Channel.AddNewAsync(task);
        }
        
        public void UpdateTask(MVC5Demo.TaskServiceClient.Person contact) {
            base.Channel.UpdateTask(contact);
        }
        
        public System.Threading.Tasks.Task UpdateTaskAsync(MVC5Demo.TaskServiceClient.Person contact) {
            return base.Channel.UpdateTaskAsync(contact);
        }
        
        public void DeleteTask(MVC5Demo.TaskServiceClient.Person task) {
            base.Channel.DeleteTask(task);
        }
        
        public System.Threading.Tasks.Task DeleteTaskAsync(MVC5Demo.TaskServiceClient.Person task) {
            return base.Channel.DeleteTaskAsync(task);
        }
    }
}
